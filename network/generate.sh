#!/bin/sh

source ./shared.sh

FIRST_ORG_DIR=crypto-config/peerOrganizations/awesome.agency
SECOND_ORG_DIR=crypto-config/peerOrganizations/pharmatic.com
THIRD_ORG_DIR=crypto-config/peerOrganizations/magik.org

# remove previous crypto material and config transactions
rm -fr channel-artifacts/*
rm -fr crypto-config/*

# Using docker-compose-template.yaml, replace constants with private key file names
# generated by the cryptogen tool and output a docker-compose.yaml specific to this
# configuration
function replacePrivateKey() {
  # sed on MacOSX does not support -i flag with a null extension. We will use
  # 't' for our back-up's extension and delete it at the end of the function
  ARCH=$(uname -s | grep Darwin)
  if [ "$ARCH" == "Darwin" ]; then
    OPTS="-it"
  else
    OPTS="-i"
  fi

  # Copy the template to the file that will be modified to add the private key
  cp docker-compose-template.yaml docker-compose.yaml

  # The next steps will replace the template's contents with the
  # actual values of the private key file names for the two CAs.
  CURRENT_DIR=$PWD
  cd $FIRST_ORG_DIR/ca
  PRIV_KEY=$(ls *_sk)
  cd $CURRENT_DIR
  sed $OPTS "s/AWESOME_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose.yaml
  cd $SECOND_ORG_DIR/ca
  PRIV_KEY=$(ls *_sk)
  cd $CURRENT_DIR
  sed $OPTS "s/PHARMATIC_CA_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose.yaml
  cd $THIRD_ORG_DIR/ca
  PRIV_KEY=$(ls *_sk)
  cd $CURRENT_DIR
  sed $OPTS "s/MAGIK_CA_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose.yaml
  # If MacOSX, remove the temporary backup of the docker-compose file
  if [ "$ARCH" == "Darwin" ]; then
    rm docker-compose-e2e.yamlt
  fi
}

# generate crypto material
cryptogen generate --config=./crypto-config.yaml
if [ "$?" -ne 0 ]; then
  echo "Failed to generate crypto material..."
  exit 1
fi

replacePrivateKey

# Client organizations should trust users from the primary organization's CA
cp $FIRST_ORG_DIR/ca/ca.awesome.agency-cert.pem $SECOND_ORG_DIR/msp/cacerts/ca.awesome.agency-cert.pem
cp $FIRST_ORG_DIR/ca/ca.awesome.agency-cert.pem $THIRD_ORG_DIR/msp/cacerts/ca.awesome.agency-cert.pem

# Generate genesis block for orderer
configtxgen -channelID contractor-sys-channel -profile ContractorOrdererGenesis \
            -outputBlock ./channel-artifacts/genesis.block

if [ "$?" -ne 0 ]; then
  echo "Failed to generate orderer genesis block..."
  exit 1
fi

# Generate channel configuration transaction
configtxgen -profile ContractorChannel -outputCreateChannelTx ./channel-artifacts/channel.tx \
            -channelID $CHANNEL_NAME
if [ "$?" -ne 0 ]; then
  echo "Failed to generate channel configuration transaction..."
  exit 1
fi

# Generate anchor peer transaction
configtxgen -profile ContractorChannel -outputAnchorPeersUpdate ./channel-artifacts/awesomeMSPanchors.tx \
            -channelID $CHANNEL_NAME -asOrg AwesomeAgencyMSP
if [ "$?" -ne 0 ]; then
  echo "Failed to generate anchor peer update for Awesome Agency..."
  exit 1
fi

# Generate peer transaction
configtxgen -profile ContractorChannel -outputAnchorPeersUpdate ./channel-artifacts/pharmaticMSPanchors.tx \
            -channelID $CHANNEL_NAME -asOrg PharmaticMSP
if [ "$?" -ne 0 ]; then
  echo "Failed to generate anchor peer update for Pharmatic AG..."
  exit 1
fi

# Generate anchor peer transaction
configtxgen -profile ContractorChannel -outputAnchorPeersUpdate ./channel-artifacts/magikMSPanchors.tx \
            -channelID $CHANNEL_NAME -asOrg MagikMSP
if [ "$?" -ne 0 ]; then
 echo "Failed to generate anchor peer update for Magik Intl..."
 exit 1
fi
