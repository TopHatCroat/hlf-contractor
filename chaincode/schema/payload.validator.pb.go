// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: payload.proto

package schema

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *IssueProject) Validate() error {
	if this.Issuer == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Issuer", fmt.Errorf(`value '%v' must not be an empty string`, this.Issuer))
	}
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if nil == this.StartDate {
		return github_com_mwitkow_go_proto_validators.FieldError("StartDate", fmt.Errorf("message must exist"))
	}
	if this.StartDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartDate", err)
		}
	}
	if nil == this.EndDate {
		return github_com_mwitkow_go_proto_validators.FieldError("EndDate", fmt.Errorf("message must exist"))
	}
	if this.EndDate != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndDate); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndDate", err)
		}
	}
	if !(this.EstimatedValue > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("EstimatedValue", fmt.Errorf(`value '%v' must be greater than '0'`, this.EstimatedValue))
	}
	return nil
}
